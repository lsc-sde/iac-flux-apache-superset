postgresql:
  postgresqlPassword: "R3s3tM3N0w!"

image:
  repository: lscsde/apache-superset
  tag: 0.1.2
  imagePullPolicy: Always

bootstrapScript: |
  #!/bin/bash
  pip install --upgrade "apache-superset[databricks]"
  pip install --upgrade authlib

extraEnvRaw:
  - name: SDE_CLIENT_SECRET
    valueFrom: 
      secretKeyRef:
        name: superset-auth
        key: CLIENT_SECRET


configOverrides:
  secret: |
    SECRET_KEY = 'mz6BCsrYnGgJ5zM7S+zZRtXS32JaFFddiYZ2h16neuK3WSMxIqe5j5EC'
  
  enable_oauth: |
    # This will make sure the redirect_uri is properly computed, even with SSL offloading
    ENABLE_PROXY_FIX = True

    from flask_appbuilder.security.manager import AUTH_OAUTH
    AUTH_TYPE = AUTH_OAUTH
    OAUTH_PROVIDERS = [
      {
        'name': 'SSO',
        'icon': 'fa-user',
        'token_key': 'access_token',
        'remote_app': {
            'client_id': '${superset_client_id}',
            'client_secret': os.getenv("SDE_CLIENT_SECRET"),
            'server_metadata_url': 'https://login.microsoftonline.com/${azure_tenant_id}/v2.0/.well-known/openid-configuration',
            'client_kwargs': {
              'scope': 'openid email profile'
            }
        }
      }
    ]

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect : "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect : "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 64m
    xlscsde.nhs.uk/dns-record: superset${environment_dns_suffix}
  tls:
  - hosts:
    - ${environment_dns_prefix}superset${environment_dns_suffix}.${private_dnz_zone}
    secretName: ${environment_dns_prefix}superset${environment_dns_suffix}.${private_dnz_zone}-tls

  hosts:
  - ${environment_dns_prefix}superset${environment_dns_suffix}.${private_dnz_zone}
  